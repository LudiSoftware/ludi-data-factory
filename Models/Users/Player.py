import time
import uuid
import datetime

from Models.TestDataCreator.TestData import DataGeneration as dg
dg = dg()

UNASSIGNED = "unassigned"

class PlayerRef:
    def __init__(self, user_or_player_json={}):
        self.id = user_or_player_json.get('id', str(uuid.uuid1()))
        self.playerId = user_or_player_json.get('playerId', self.id)
        self.name = user_or_player_json.get('name', dg.generate_full_name())
        self.rank = user_or_player_json.get('rank', dg.generate_player_rank())
        self.dob = user_or_player_json.get('dob', dg.generate_birthday())
        self.tryoutTag = user_or_player_json.get('tryoutTag', dg.generate_tryout_tag())
        self.imgUrl = user_or_player_json.get('imgUrl', dg.generate_player_img_url())
        self.pointX = user_or_player_json.get('pointX', 0)
        self.pointY = user_or_player_json.get('pointY', 0)
        self.color = user_or_player_json.get('color', "red")
        self.listPosition = user_or_player_json.get('listPosition', 0)
        self.status = user_or_player_json.get('status', "open")
        self.userId = user_or_player_json.get('userId', "unassigned")
        self.parentId = user_or_player_json.get('parentId', "unassigned")
        self.orderIndex = user_or_player_json.get('orderIndex', 0)
        # PlayMetrics
        self.team = user_or_player_json.get("team", "None")
        self.foot = user_or_player_json.get("Foot", user_or_player_json.get("foot", "right"))
        self.position = user_or_player_json.get("position", "forward")
        self.number = user_or_player_json.get("number", 0)
        self.season: str = user_or_player_json.get("season", "None")
        self.player_first_name: str = user_or_player_json.get("player_first_name", "None")
        self.player_last_name: str = user_or_player_json.get("player_last_name", "None")
        self.gender: str = user_or_player_json.get("gender", "male")
        self.birth_date: str = user_or_player_json.get("birth_date", dg.generate_birthday())
        self.parent1_email: str = user_or_player_json.get("parent1_email", dg.generate_email())
        self.parent1_first_name: str = user_or_player_json.get("parent1_first_name", "None")
        self.parent1_last_name: str = user_or_player_json.get("parent1_last_name", "None")
        self.parent1_mobile_number: str = user_or_player_json.get("parent1_mobile_number", dg.generate_phone_number())
        self.parent2_email: str = user_or_player_json.get("parent2_email", dg.generate_email())
        self.parent2_first_name: str = user_or_player_json.get("parent2_first_name", "None")
        self.parent2_last_name: str = user_or_player_json.get("parent2_last_name", "None")
        self.parent2_mobile_number: str = user_or_player_json.get("parent2_mobile_number", dg.generate_phone_number())
        self.street: str = user_or_player_json.get("street", "100 street address")
        self.city: str = user_or_player_json.get("city", "park city")
        self.state: str = user_or_player_json.get("state", "Utah")
        self.zip: str = user_or_player_json.get("zip", "00000")


class Player:
    def __init__(self, user_or_playerRef_json=None):
        self.id = user_or_playerRef_json.get("id", str(uuid.uuid4()))
        self.rank = user_or_playerRef_json.get("rank", 0)
        self.tryoutTag = user_or_playerRef_json.get("tryoutTag", None)
        self.age = user_or_playerRef_json.get("age", "16")
        self.dob = user_or_playerRef_json.get("dob", "11/29/07")
        self.teamName = user_or_playerRef_json.get("teamName", user_or_playerRef_json.get("team", None))
        self.playerName = user_or_playerRef_json.get("playerName", None)
        self.organizations: [] = user_or_playerRef_json.get("organizations", [])
        self.teams = user_or_playerRef_json.get("teams", [])
        self.contacts = user_or_playerRef_json.get("contacts", [])
        # PlayMetrics
        self.team = user_or_playerRef_json.get("team", None)
        self.foot = user_or_playerRef_json.get("Foot", user_or_playerRef_json.get("foot", "right"))
        self.position = user_or_playerRef_json.get("position", "forward")
        self.number = user_or_playerRef_json.get("number", 0)
        self.season: str = user_or_playerRef_json.get("season", None)
        self.player_first_name: str = user_or_playerRef_json.get("player_first_name", None)
        self.player_last_name: str = user_or_playerRef_json.get("player_last_name", None)
        self.gender: str = user_or_playerRef_json.get("gender", None)
        self.birth_date: datetime.date = user_or_playerRef_json.get("birth_date", None)
        self.parent1_email: str = user_or_playerRef_json.get("parent1_email", None)
        self.parent1_first_name: str = user_or_playerRef_json.get("parent1_first_name", None)
        self.parent1_last_name: str = user_or_playerRef_json.get("parent1_last_name", None)
        self.parent1_mobile_number: str = user_or_playerRef_json.get("parent1_mobile_number", None)
        self.parent2_email: str = user_or_playerRef_json.get("parent2_email", None)
        self.parent2_first_name: str = user_or_playerRef_json.get("parent2_first_name", None)
        self.parent2_last_name: str = user_or_playerRef_json.get("parent2_last_name", None)
        self.parent2_mobile_number: str = user_or_playerRef_json.get("parent2_mobile_number", None)
        self.street: str = user_or_playerRef_json.get("street", None)
        self.city: str = user_or_playerRef_json.get("city", None)
        self.state: str = user_or_playerRef_json.get("state", None)
        self.zip: str = user_or_playerRef_json.get("zip", None)
        #base
        self.dateCreated = user_or_playerRef_json.get("dateCreated", str(time.time()))
        self.dateUpdated = user_or_playerRef_json.get("dateUpdated", str(time.time()))
        self.name = user_or_playerRef_json.get("name", None)
        self.firstName = user_or_playerRef_json.get("firstName", None)
        self.lastName = user_or_playerRef_json.get("lastName", None)
        self.type = user_or_playerRef_json.get("type", None)
        self.subType = user_or_playerRef_json.get("subType", None)
        self.details = user_or_playerRef_json.get("details", None)
        self.isFree = user_or_playerRef_json.get("isFree", False)
        self.status = user_or_playerRef_json.get("status", None)
        self.mode = user_or_playerRef_json.get("mode", None)
        self.imgUrl = user_or_playerRef_json.get("imgUrl", None)
        self.sport = user_or_playerRef_json.get("sport", None)

